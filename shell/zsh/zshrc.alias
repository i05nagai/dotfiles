alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# alias shell-reload="exec ${SHELL} -l"
alias shell-reload="exec zsh -l"
alias group-show-list="cut -d: -f1 /etc/group"

if which docker >/dev/null 2>&1; then
  alias docker-kill-stopped-process='docker rm $(docker ps -a -q)'
  alias docker-kill-running-process='docker kill $(docker ps -q)'
  alias docker-delete-all-images='docker rmi $(docker images -q)'
  alias docker-get-container-ip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"
  alias docker-get-last-container="docker ps -l -q"
  alias docker-delete-all-none-images='docker rmi $(docker images --filter dangling=true --quiet)'
  alias docker-show-full-command='docker inspect  -f "{{.Name}} {{.Config.Cmd}}" $(docker ps -a -q)'

  docker-attach-with-bash()
  {
    # $1 container_id
    docker exec -it $1 /bin/bash
  }

  docker-save-as-gzip()
  {
    # $1 image_name
    docker save $1 | gzip > ${1}.tar.gz
  }
fi

if which bq >/dev/null 2>&1; then
  alias bq-get-table-schema="bq show --format=prettyjson"
  alias bq-query-standard-sql="bq query --nouse_legacy_sql"
  bq-query-standard-sqls()
  {
    cat $@ | bq query --nouse_legacy_sql
  }
  bq-query-standard-sqls-dry-run()
  {
    cat $@ | bq query --nouse_legacy_sql --dry_run
  }
  bq-query-and-insert-standard-sql()
  {
    echo "$1: sql file path"
    echo "$2: inserting table"
    cat $1 | bq query --nouse_legacy_sql --format json | bq insert $2
  }
fi

# command exists
if which jq >/dev/null 2>&1; then
  jq-pretty-print()
  {
    echo $1 | jq -M "."
  }
fi

# command exists
if which grep >/dev/null 2>&1; then
  grep-recursive-without-git()
  {
    grep -r $1 --exclude-dir .git $2
  }
fi

# command exists
if which git >/dev/null 2>&1; then
  git-delete-and-checkout-current-branch()
  {
    git fetch
    git branch $1
    git branch -d $2
    git checkout origin/$2 -b $2
  }
fi

if which ruby >/dev/null 2>&1; then
  set-intersection()
  {
    ruby -e 'a=File.read("'$1'");b=File.read("'$2'");print (a.split & b.split).join("\n")'
  }
  set-subtract()
  {
    ruby -e 'a=File.read("'$1'");b=File.read("'$2'");puts (a.split - b.split).join("\n")'
  }
fi

source ~/.shell/zsh/awscli.sh
