
snippet     gmockinterface
abbr        gmock for interface class
options     head
	#pragma once
	
	#include "${1:/path/to/targe}"
	#include <gmock/gmock.h>

	namespace ${2:namespace} {
		using ::testing::_;
		using ::testing::Invoke;
		class ${3:MockName} : public ${4:TargetClass} {
		//private typedef
		private:
		//public typedef
		public:
		//public function
		public:
			//MOCK_CONST_METHOD0(doGetData, double());

			void delegateToDefault()
			{
				ON_CALL(*this, doClone())
					.WillByDefault(Invoke(this, &$3::doCloneMock));
				ON_CALL(*this, doEqual())
					.WillByDefault(Invoke(this, &$3::doEqualeMock));
			}

			$3* doCloneMock()
			{
				return new $3();
			}

			bool doEqualeMock(const $3& other)
			{
				return true;
			}
		//private function
		private:
		//private members
		private:
		};
	} // namespace $2
