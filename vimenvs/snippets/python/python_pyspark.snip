include python_pyspark_context.snip
include python_pyspark_dataframe.snip
include python_pyspark_rdd.snip
include python_pyspark_spark_session.snip
include python_pyspark_streaming.snip

#
# import
#
snippet     spark_import
abbr        import
options     word
	import pyspark

snippet     spark_import_sql
abbr        import
options     word
	import pyspark.sql as sql

snippet     spark_import_functions
abbr        import
options     word
	import pyspark.sql.functions as functions

snippet     spark_import_types
abbr        import
options     word
	import pyspark.sql.types as types

snippet     spark_import_window
abbr        import
options     word
	import pyspark.sql.window as window

snippet     spark_import_types_all
abbr        pyspark sql types
options     word
	from pyspark.sql.types import ArrayType
	from pyspark.sql.types import BinaryType
	from pyspark.sql.types import BooleanType
	from pyspark.sql.types import ByteType
	from pyspark.sql.types import DataType
	from pyspark.sql.types import DateType
	from pyspark.sql.types import DecimalType
	from pyspark.sql.types import DoubleType
	from pyspark.sql.types import FloatType
	from pyspark.sql.types import IntegerType
	from pyspark.sql.types import LongType
	from pyspark.sql.types import MapType
	from pyspark.sql.types import NullType
	from pyspark.sql.types import ShortType
	from pyspark.sql.types import StringType
	from pyspark.sql.types import StructField
	from pyspark.sql.types import StructType
	from pyspark.sql.types import TimestampType

#
# create
#
snippet     spark_create_spark_config
abbr        pyspark.sparkconf
options     word
	${4:conf} = pyspark.SparkConf(
	).setMaster(
		"${2:local}"
	).setAppName(
		"${3:name_of_app}"
	)${0}

#
# template
#
snippet     spark_template_logger
abbr        logger
options     word
	def get_logger(sc, name):
		"""get_logger
	
		:param name:
	
		Example
		========
	
		>>> logger = get_logger(sc, __name__)
		>>> logger.info("pyspark script logger initialized")
		"""
		log4j = sc._jvm.org.apache.log4j
		return log4j.LogManager.getLogger(name)
