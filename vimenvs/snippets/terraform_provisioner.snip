#
# null provider
#
snippet     terraform_resource_null
abbr        word
options     word
	resource "null_resource" "cluster" {
		# Changes to any instance of the cluster requires re-provisioning
		triggers {
			cluster_instance_ids = "${join(",", aws_instance.cluster.*.id)}"
		}
		# Bootstrap script can run on any instance of the cluster
		# So we just choose the first in this case
		connection {
			host = "${element(aws_instance.cluster.*.public_ip, 0)}"
		}
		provisioner "remote-exec" {
		# Bootstrap script called with private_ip of each node in the clutser
		inline = [
		  "bootstrap-cluster.sh ${join(" ", aws_instance.cluster.*.private_ip)}",
		]
	  }
	}

snippet     terraform_data_null_source
abbr        word
options     word
	data "null_data_source" "values" {
		# refer as "${data.null_data_source.values.outputs["key"]}"
		inputs = {
			key = "value"
		}
	}

snippet     terraform_data_null_source_count
abbr        word
options     word
	data "null_data_source" "values" {
		count = 1
		# refer as "${data.null_data_source.map_list.*.outputs["key"]}"
		inputs = {
			key = "value"
		}
	}
