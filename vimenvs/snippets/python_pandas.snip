include python_pandas_dataframe.snip
include python_pandas_series.snip

snippet     pd_import
abbr        abbr
options     word
	import pandas as pd

snippet     pd_read_tsv
abbr        abbr
options     word
	pd.read_csv(${1:'path_to_tsv'}, delimiter='\t')

snippet     pd_read_csv
abbr        abbr
options     word
	pd.read_csv('${1:path_to_tsv}')

snippet     pd_read_gbq
abbr        abbr
options     word
	# pip install pandas-gbq
	df = pd.read_gbq(${1:query},
                     project_id=project_id,
                     verbose=True,
                     dialect='standard')

snippet     pd_df_column_slice
abbr        abbr
options     word
	${1:df}.loc[:, ${2:column}]

snippet     pd_df_column_rename
abbr        abbr
options     word
	${1:df}.columns = [${2:column_name,}]

snippet     pd_df_groupby
abbr        abbr
options     word
	${1:df}.groupby([${2:columun_name}])

snippet     pd_df_sort
abbr        abbr
options     word
	${1:df}.sort_values(by=(${2:columun_names}), ascending=${3:False})

snippet     pd_df_write_tsv
abbr        abbr
options     word
	${1:df}.to_csv('${2:path_to_tsv}', sep='\t', index=False, header=True)

snippet     pd_df_write_csv
abbr        csv
options     word
	${1:df}.to_csv('${2:path_to_tsv}', index=False, header=True)

snippet     pd_df_select_column
abbr        select column
options     word
	${1:df}.ix[:, ${1:from}:${2:to}]

snippet     pd_df_plot
abbr        df plot
options     word
	${1:df}.plot()

snippet     pd_df_plot_bar
abbr        df plot bar
options     word
	${1:df}.plot.bar()

snippet     pd_df_plot_bar_stacked
abbr        df plot bar stacked
options     word
	${1:df}.plot.bar(stacked=True)

snippet     pd_df_plot_bar_horizontal
abbr        df plot bar horizontal
options     word
	${1:df}.plot.barh()

snippet     pd_df_plot_bar_horizontal_stacked
abbr        df plot bar horizontal stacked
options     word
	${1:df}.plot.barh(stacked=True)

snippet     pd_df_plot_histogram
abbr        df plot bar histogram
options     word
	${1:df}.plot.hist()

snippet     pd_df_plot_histogram_stacked
abbr        df plot bar histogram
options     word
	${1:df}.plot.hist(stacked=True)

snippet     pd_df_plot_histogram_bins
abbr        df plot bar histogram
options     word
	${1:df}.plot.hist(bins=20)

snippet     pd_df_plot_histogram_cumulative
abbr        df plot bar histogram cumulative
options     word
	${1:df}.plot.hist(cumulative=True)

snippet     pd_df_plot_histogram_horizontal
abbr        df plot bar histogram cumulative
options     word
	${1:df}.plot.hist(orientation='horizontal')
snippet     pd_df_type_datetime
abbr        df type datetime
options     word
	'datetime64[ns]'

snippet     pd_df_to_datetime
abbr        df type datetime
options     word
	df['${1}'] = df.to_datetime(df['$1'], format='${2:%Y-%m-%d')

snippet     pd_df_plot_row_col
abbr        df type datetime
options     word
	fig, axes = plt.subplots(nrows=${1:2}, ncols=${2:2})
	df[${3:col}].plot(ax=axes[${4:i}, ${5:j}])

snippet     pd_df_plot_multiple_row
abbr        df type datetime
options     word
	fig, axes = plt.subplots(nrows=${1:2}, ncols=1)
	for i, col in enumerate(${3:columns}):
		df[col].plot(ax=axes[i])

snippet     pd_df_plot_multiple_col
abbr        df type datetime
options     word
	fig, axes = plt.subplots(nrows=1, ncols=${1:2})
	for i, col in enumerate(${2:columns}):
		df[df['${3:col}'] == col].plot(ax=axes[i])
		axes[i].set_title(str(col))

snippet     pd_df_aggregate
abbr        df aggregate
options     word
	${1:df}.groupby(${2:col}).agg(['count', 'min', 'max', 'mean', 'std'])

snippet     pd_df_preview
abbr        df preview
options     word
	print(${1:df}.head(10))
	print($1.tail(10))
	print($1.describe())

snippet     pd_df_iterate_rows
abbr        df preview
options     word
	for index, row in ${1:df}.iterrows():
		${2}

snippet     pd_df_iterate_row_and_col
abbr        df preview
options     word
	for row_index, row in ${1:df}.iterrows():
		for col_index, col in enumrate(row):
			${2}

snippet     pd_pivot_table
abbr        df preview
options     word
	pd.pivot_table(df, values='D', index=['row1', 'row2'], columns=['C'], aggfunc=np.sum)

