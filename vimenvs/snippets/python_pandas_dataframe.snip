#
# nan
#
snippet     pd_df_delete_nan_column
abbr        df preview
options     word
	${1:df}.dropna(axis=0)

snippet     pd_df_delete_nan_row
abbr        df preview
options     word
	${1:df}.dropna(axis=1)

snippet     pd_df_replace_index
abbr        df preview
options     word
	${1:df}.fillna(value=${2}, axis=0)

#
# filter
#
snippet     pd_df_filter_row_like
abbr        df plot bar histogram cumulative
options     word
	${1:df}.filter(like='${2}', axis=0)

snippet     pd_df_filter_row_regexp
abbr        df plot bar histogram cumulative
options     word
	${1:df}.filter(regex='${2}', axis=0)

snippet     pd_df_filter_row_condition
abbr        df plot bar histogram cumulative
options     word
	${1:df}.loc[df['${2:column_name}'] ${3:== value}]

snippet     pd_df_filter_row_by_column_with_regexp
abbr        df preview
options     word
	${1:df}[$1[${2:key}].fillna(value='False').str.contains(${3:regex})]

snippet     pd_df_filter_row_by_column_in_list
abbr        df preview
options     word
	${1:df}[$1[${2:key}].fillna(value='False').str.contains(${3:regex})]
	symbols = [
		'あいうえお',
	]
	symbols = [c for c in ''.join(symbols)]
	df[df[key].fillna(value='False').isin(symbols)]

#
# show
#
snippet     pd_df_show
abbr        abbr
options     word
	print(${1:df}.head(${2:10}))

snippet     pd_df_show_columns
abbr        abbr
options     word
	print(${1:df}.columns)

#
# read
#
snippet     pd_df_read_from_double_array_no_header
abbr        abbr
options     word
	df = pd.DataFrame(double_array[1:], columns=double_array[0], dtype=None)

snippet     pd_df_read_from_double_array_header
abbr        abbr
options     word
	df = pd.DataFrame(${1:double_array}[1:], columns=$1[0], dtype=None)

#
# 
#
snippet     pd_df_add_column
abbr        abbr
options     word
	def func(row):
		# row.name: index
		return row['hoge']
	$1['${2:new_column}'] = ${1:df}.apply(func, axis=1)

snippet     pd_df_add_row
abbr        abbr
options     word
	def func(col):
		return sum(col)
	${1:df}.apply(func, axis=0)

#
#  type
#
snippet     pd_df_get_type
abbr        abbr
options     word
	${1:df}.dtypes

snippet     pd_df_set_type_to_numeric_all
abbr        abbr
options     word
	$1 = ${1:df}.apply(pd.to_numeric, errors='ignore')
