#
# path
#
snippet     bash_path_to_source
abbr        if script is called from source
options     word
	PATH_TO_THIS_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd )

snippet     bash_path_to_this_dir
abbr        if script is called from source
options     word
	PATH_TO_THIS_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd )

#
# if
#
snippet     bash_if_string_contain
abbr        if string
options     word
	if [[ ${1:string} == *"${2:str}"* ]]; then
		${3}
	fi

snippet     bash_if_string_regexp
abbr        if string
options     word
	if [[ ${1:string} =~ ${2:regexp} ]]; then
		${3}
	fi

snippet     bash_if_string_regexp_not
abbr        if string
options     word
	if [[ ! ${1:string} =~ ${2:regexp} ]]; then
		${3}
	fi

snippet     bash_if_comment
abbr        if string
options     word
	# ignore comments
	[[ "$line" =~ ^#.*$ ]] && continue

snippet     bash_if_script_is_called_from_source
abbr        if script is called from source
options     word
	if [[ $_ != \$0 ]]; then
		# if script is called from source command
		readonly PATH_TO_THIS_DIR=${PATH_TO_ENV_DIR}
	else
		readonly PATH_TO_THIS_DIR=$(cd $(dirname \${0});pwd)
	fi

#
# variable
#
snippet     bash_variable_with_default_value_without_substitution
abbr        calculate
options     word
	${${1:parameter}:-${2:default}}

snippet     bash_variable_with_default_value_with_substitution
abbr        calculate
options     word
	${${1:parameter}:=${2:default}}

snippet     bash_variable_substitute_if_not_defined
abbr        substitute value if not defined. Colon is required
options     word
	: ${${1:parameter}:=${2:default}}

snippet     bash_variable_error_when_undefined
abbr        calculate
options     word
	${${1:parameter}:?${2:error_message}}

snippet     bash_variable_substitute_when_defined
abbr        calculate
options     word
	${${1:parameter}:+${2:substitution}}

snippet     bash_variable_length_str
abbr        variable
options     word
	${#${1:parameter}}

snippet     bash_variable_length_array
abbr        variable
options     word
	${#${1:parameter}[*]}

snippet     bash_array
abbr        variable
options     word
	${${1:parameter}[@]}

snippet     bash_variable_replace
abbr        variable
options     word
	${${1:parameter}/${2:pattern}/${3:replacee}}

snippet     bash_variable_capitalize_first_letter
abbr        variable
options     word
	${${1:parameter}^}

snippet     bash_variable_capitalize_all
abbr        variable
options     word
	${${1:parameter}^^}

#
# if
#
snippet     bash_if_sourced
abbr        if script is sourced
options     word
	if [[ $_ != \$0 ]]; then
	fi

snippet     bash_if_contain
abbr        if script is sourced
options     word
	if [[ ${1:testmystring} != *"${2:word}"* ]]; then
		$0
	fi

#
# operator
#
snippet     bash_equal_not
abbr        not_equal
options     word
	[[ ${1} != ${2} ]]

snippet     bash_equal
abbr        not_equal
options     word
	[[ ${1} == ${2} ]]

snippet     bash_and
abbr        not_equal
options     word
	[[  ${2} && ${2} ]]

snippet     bash_not
abbr        not_equal
options     word
	[[ ! ( ${1} ) ]]

#
#
#
snippet     bash_ignore_error
abbr        bash
options     word
	${1} || true
